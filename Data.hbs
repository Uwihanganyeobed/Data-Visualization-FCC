<!DOCTYPE html>
<html lang="en">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Document</title>
</head>
<style>
   .bar {
      width: 25px;
      height: 100px;
      /* Add your code below this line */
      margin: 2px;

      /* Add your code above this line */
      display: inline-block;
      background-color: blue;
   }

   .bar:hover {
      fill: brown;
   }
</style>

<body>
   <h2><u>This is a sample Bar Chart </u></h2>
   <script>
      /*
     const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];
 
     d3.select("body").selectAll("div")
       .data(dataset)
       .enter()
       .append("div")
       .attr("class", "bar")
       .style("height", (d) => ((d*10) + "px")) // Change this line
         */
      /*
          const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];
      
          const w = 500;
          const h = 100;
      
          const svg = d3.select("body")
                        .append("svg")
                        .attr("width", w)
                        .attr("height", h);
      
          svg.selectAll("rect")
             .data(dataset)
             .enter()
             .append("rect")
             .attr("x", (d, i) => i * 30)
             .attr("y", (d, i) => h - 3 * d)
             .attr("width", 25)
             .attr("height", (d, i) => d * 3)
             .attr("fill", "navy")
             .attr("class", "bar")
             // Add your code below this line
            .append("title")
            .text((item)=> item)
      
      
             // Add your code above this line
      
          svg.selectAll("text")
             .data(dataset)
             .enter()
             .append("text")
             .text((d) => d)
             .attr("x", (d, i) => i * 30)
             .attr("y", (d, i) => h - (d * 3 + 3))
      
      */

      /*
            // Add a Tooltip to a D3 Element
      
            const dataset = [
                        [ 34,    78 ],
                        [ 109,   280 ],
                        [ 310,   120 ],
                        [ 79,    411 ],
                        [ 420,   220 ],
                        [ 233,   145 ],
                        [ 333,   96 ],
                        [ 222,   333 ],
                        [ 78,    320 ],
                        [ 21,    123 ]
                      ];
      
      
          const w = 500;
          const h = 500;
      
          const svg = d3.select("body")
                        .append("svg")
                        .attr("width", w)
                        .attr("height", h);
      
          svg.selectAll("circle")
             .data(dataset)
             .enter()
             .append("circle")
             .attr("cx", (d, i) => d[0])
             .attr("cy", (d, i) => h - d[1])
             .attr("r", 5);
      
           svg.selectAll("text")
             .data(dataset)
             .enter()
             .append("text")
             .attr("x", d => d[0] + 5)  // Set x attribute 5 units more than cx value
             .attr("y", d => h - d[1])  // Set y attribute same as cy value
             .text(d => `${d[0]}, ${d[1]}`)
             .attr("font-size", "12px")
             .attr("fill", "black");
             */

      /*
      // Create a Linear Scale with D3
     //Add Axes to a Visualization
     const dataset = [
                 [ 34,     78 ],
                 [ 109,   280 ],
                 [ 310,   120 ],
                 [ 79,   411 ],
                 [ 420,   220 ],
                 [ 233,   145 ],
                 [ 333,   96 ],
                 [ 222,    333 ],
                 [ 78,    320 ],
                 [ 21,   123 ]
               ];

   const w = 500;
   const h = 500;
   const padding = 60;

   const xScale = d3.scaleLinear()
                    .domain([0, d3.max(dataset, (d) => d[0])])
                    .range([padding, w - padding]);

   const yScale = d3.scaleLinear()
                    .domain([0, d3.max(dataset, (d) => d[1])])
                    .range([h - padding, padding]);

   const svg = d3.select("body")
                 .append("svg")
                 .attr("width", w)
                 .attr("height", h);

   svg.selectAll("circle")
      .data(dataset)
      .enter()
      .append("circle")
      .attr("cx", (d) => xScale(d[0]))
      .attr("cy",(d) => yScale(d[1]))
      .attr("r", (d) => 5);

   svg.selectAll("text")
      .data(dataset)
      .enter()
      .append("text")
      .text((d) =>  (d[0] + "," + d[1]))
      .attr("x", (d) => xScale(d[0] + 10))
      .attr("y", (d) => yScale(d[1]))

    const xAxis = d3.axisBottom(xScale);
   const yAxis = d3.axisLeft(yScale);

   svg.append("g")
      .attr("transform", "translate(0," + (h - padding) + ")")
      .call(xAxis);

   svg.append("g")
      .attr("transform", "translate(" + padding + ",0)")
      .call(yAxis);
*/
      // AJAX requests and API
      document.addEventListener('DOMContentLoaded', function () {
         document.getElementById('getMessage').onclick = function () {
            // Add your code below this line
            const req = new XMLHttpRequest();
            req.open("GET", '/json/cats.json', true);
            req.send();
            req.onload = function () {
               const json = JSON.parse(req.responseText);
               document.getElementsByClassName('message')[0].innerHTML = JSON.stringify(json);

            }

            // Add your code above this line
            // using fetch
            fetch('/json/cats.json')
               .then(res => res.json())
               .then(data => { document.getElementById('message').innerHTML = JSON.stringify(data); })

            // get user location
            if (navigator.geolocation) {
               navigator.geolocation.getCurrentPosition(function (position) {
                  document.getElementById('data').innerHTML = "latitude: " + position.coords.latitude + "<br>longitude: " + position.coords.longitude;
               })
            }
            // 
            document.addEventListener('DOMContentLoaded', function () {
               document.getElementById('sendMessage').onclick = function () {

                  const userName = document.getElementById('name').value;
                  const url = 'https://jsonplaceholder.typicode.com/posts';
                  // Add your code below this line
                  // Post Data with the JavaScript XMLHttpRequest Method
                  const xhr = new XMLHttpRequest();
                  xhr.open('POST', url, true);
                  xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
                  xhr.onreadystatechange = function () {
                     if (xhr.readyState === 4 && xhr.status === 201) {
                        const serverResponse = JSON.parse(xhr.response);
                        document.getElementsByClassName('message')[0].textContent = serverResponse.userName + serverResponse.suffix;
                     }
                  };
                  const body = JSON.stringify({ userName: userName, suffix: ' loves cats!' });
                  xhr.send(body);
                  // Add your code above this line
               };
            });
         };
      });

   </script>
</body>

</html>